{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"R:\\\\Users\\\\simba\\\\Desktop\\\\operations\\\\Xsh\\\\rollingThunder\\\\closedError\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Notifyme from './componets/Notifyme';\nimport Textbody from './componets/Textbody';\nimport Countdown from './componets/Countdown';\nimport Footer from './componets/Footer';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reload = () => {\n      let count = new Date('March 11, 2021 03:24:00').getTime();\n      let now = new Date().getTime();\n      let Deadline = count - now;\n      this.setState({\n        days: Math.floor(Deadline / (1000 * 60 * 60 * 24)),\n        hours: Math.floor(Deadline % (1000 * 60 * 60 * 24) / (1000 * 60 * 60)),\n        minutes: Math.floor(Deadline % (1000 * 60 * 60) / (1000 * 60)),\n        seconds: Math.floor(Deadline % (1000 * 60) / 1000)\n      });\n    };\n\n    this.state = {\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.reload(), 1000);\n  }\n\n  render() {\n    console.log(this.state.days);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Textbody, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Notifyme, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Countdown, {\n        days: this.state.days,\n        hours: this.state.hours,\n        minutes: this.state.minutes,\n        seconds: this.state.seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["R:/Users/simba/Desktop/operations/Xsh/rollingThunder/closedError/src/App.js"],"names":["React","Component","Notifyme","Textbody","Countdown","Footer","App","constructor","props","reload","count","Date","getTime","now","Deadline","setState","days","Math","floor","hours","minutes","seconds","state","componentDidMount","timerID","setInterval","render","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAanBC,MAbmB,GAaV,MAAM;AACb,UAAIC,KAAK,GAAG,IAAIC,IAAJ,CAAS,yBAAT,EAAoCC,OAApC,EAAZ;AACA,UAAIC,GAAG,GAAG,IAAIF,IAAJ,GAAWC,OAAX,EAAV;AACA,UAAIE,QAAQ,GAAGJ,KAAK,GAAGG,GAAvB;AAEA,WAAKE,QAAL,CAAc;AAEZC,QAAAA,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWJ,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAnB,CAFM;AAGZK,QAAAA,KAAK,EAAEF,IAAI,CAACC,KAAL,CAAYJ,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAArB,CAAT,IAAsC,OAAO,EAAP,GAAY,EAAlD,CAAX,CAHK;AAIZM,QAAAA,OAAO,EAAEH,IAAI,CAACC,KAAL,CAAYJ,QAAQ,IAAI,OAAO,EAAP,GAAY,EAAhB,CAAR,IAA+B,OAAO,EAAtC,CAAZ,CAJG;AAKZO,QAAAA,OAAO,EAAEJ,IAAI,CAACC,KAAL,CAAYJ,QAAQ,IAAI,OAAO,EAAX,CAAT,GAA2B,IAAtC;AALG,OAAd;AAQD,KA1BkB;;AAGjB,SAAKQ,KAAL,GAAa;AAEXN,MAAAA,IAAI,EAAE,CAFK;AAGXG,MAAAA,KAAK,EAAE,CAHI;AAIXC,MAAAA,OAAO,EAAE,CAJE;AAKXC,MAAAA,OAAO,EAAE;AALE,KAAb;AAQD;;AAiBDE,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL,GAAeC,WAAW,CACxB,MAAM,KAAKhB,MAAL,EADkB,EACH,IADG,CAA1B;AAID;;AACDiB,EAAAA,MAAM,GAAG;AAEPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWN,IAAvB;AACA,wBAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AAAW,QAAA,IAAI,EAAE,KAAKM,KAAL,CAAWN,IAA5B;AACE,QAAA,KAAK,EAAE,KAAKM,KAAL,CAAWH,KADpB;AAEE,QAAA,OAAO,EAAE,KAAKG,KAAL,CAAWF,OAFtB;AAGE,QAAA,OAAO,EAAE,KAAKE,KAAL,CAAWD;AAHtB;AAAA;AAAA;AAAA;AAAA,cAHF,eAQE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAeD;;AArDyB;;AAwD5B,eAAef,GAAf","sourcesContent":["import React, { Component } from 'react'\r\n\r\nimport './App.css';\r\nimport Notifyme from './componets/Notifyme';\r\nimport Textbody from './componets/Textbody';\r\nimport Countdown from './componets/Countdown';\r\nimport Footer from './componets/Footer';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n      days: 0,\r\n      hours: 0,\r\n      minutes: 0,\r\n      seconds: 0\r\n    }\r\n\r\n  }\r\n\r\n  reload = () => {\r\n    let count = new Date('March 11, 2021 03:24:00').getTime();\r\n    let now = new Date().getTime();\r\n    let Deadline = count - now;\r\n\r\n    this.setState({\r\n\r\n      days: Math.floor(Deadline / (1000 * 60 * 60 * 24)),\r\n      hours: Math.floor((Deadline % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\r\n      minutes: Math.floor((Deadline % (1000 * 60 * 60) / (1000 * 60))),\r\n      seconds: Math.floor((Deadline % (1000 * 60)) / 1000)\r\n    });\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(\r\n      () => this.reload(), 1000\r\n    );\r\n\r\n  }\r\n  render() {\r\n\r\n    console.log(this.state.days);\r\n    return (\r\n\r\n      <div className=\"container\">\r\n        <Textbody />\r\n        <Notifyme />\r\n        <Countdown days={this.state.days}\r\n          hours={this.state.hours}\r\n          minutes={this.state.minutes}\r\n          seconds={this.state.seconds}\r\n        />\r\n        <Footer />\r\n      </div>\r\n\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}