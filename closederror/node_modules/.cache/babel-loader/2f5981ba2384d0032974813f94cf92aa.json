{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"R:\\\\Users\\\\simba\\\\Desktop\\\\operations\\\\Xsh\\\\rollingThunder\\\\closedError\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Notifyme from './componets/Notifyme';\nimport Textbody from './componets/Textbody';\nimport Countdown from './componets/Countdown';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: new Date('jan 1, 2021,00:00:00').getTime,\n      now: new Date().getTime,\n      deadline: 0,\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n    this.reload = this.reload.bind('this');\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.reload(), 1000);\n  }\n\n  reload() {\n    this.setState(state => ({\n      deadline: state.count - state.now,\n      days: Math.floor(this.deadline / (1000 * 60 * 60 * 24))\n    }).bind('this'));\n  }\n\n  render() {\n    console.log(this.days);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Textbody, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Notifyme, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Countdown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["R:/Users/simba/Desktop/operations/Xsh/rollingThunder/closedError/src/App.js"],"names":["React","Component","Notifyme","Textbody","Countdown","App","constructor","props","state","count","Date","getTime","now","deadline","days","hours","minutes","seconds","reload","bind","componentDidMount","timerID","setInterval","setState","Math","floor","render","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AAEC,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAW;AACTC,MAAAA,KAAK,EAAG,IAAIC,IAAJ,CAAU,sBAAV,EAAkCC,OADjC;AAETC,MAAAA,GAAG,EAAC,IAAIF,IAAJ,GAAWC,OAFN;AAGTE,MAAAA,QAAQ,EAAC,CAHA;AAITC,MAAAA,IAAI,EAAE,CAJG;AAKTC,MAAAA,KAAK,EAAC,CALG;AAMTC,MAAAA,OAAO,EAAC,CANC;AAOTC,MAAAA,OAAO,EAAC;AAPC,KAAX;AASA,SAAKC,MAAL,GAAY,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,MAAjB,CAAZ;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL,GAAeC,WAAW,CACxB,MAAM,KAAKJ,MAAL,EADkB,EACH,IADG,CAA1B;AAGD;;AAEDA,EAAAA,MAAM,GAAG;AACP,SAAKK,QAAL,CAAcf,KAAK,IAAG;AAClBK,MAAAA,QAAQ,EAAEL,KAAK,CAACC,KAAN,GAAaD,KAAK,CAACI,GADX;AAElBE,MAAAA,IAAI,EAAEU,IAAI,CAACC,KAAL,CAAW,KAAKZ,QAAL,IAAe,OAAK,EAAL,GAAQ,EAAR,GAAW,EAA1B,CAAX;AAFY,OAGpBM,IAHoB,CAGf,MAHe,CAAtB;AAID;;AAGDO,EAAAA,MAAM,GAAG;AAEPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,IAAjB;AACA,wBAEG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH;AAUD;;AA1C0B;;AA6C7B,eAAeT,GAAf","sourcesContent":["import React, { Component } from 'react'\n \nimport './App.css';\nimport Notifyme from './componets/Notifyme';\nimport Textbody from './componets/Textbody';\nimport Countdown from './componets/Countdown';\n\n class App extends Component {\n   constructor(props){\n    super(props);\n   \n    this.state={\n      count : new Date ('jan 1, 2021,00:00:00').getTime,\n      now:new Date().getTime,\n      deadline:0,\n      days: 0,\n      hours:0,\n      minutes:0,\n      seconds:0\n    }\n    this.reload=this.reload.bind('this');\n  }\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.reload(), 1000\n    );\n  }\n\n  reload (){\n    this.setState(state=>({\n        deadline: state.count- state.now,\n        days: Math.floor(this.deadline/(1000*60*60*24))\n    }.bind('this')));\n  }\n  \n\n  render() {\n    \n    console.log(this.days);\n    return (\n       \n       <div className=\"container\">\n         <Textbody />\n         <Notifyme />\n         <Countdown />\n       </div>\n\n       \n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}