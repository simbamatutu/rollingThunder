{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"R:\\\\Users\\\\simba\\\\Desktop\\\\operations\\\\Xsh\\\\rollingThunder\\\\closedError\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Notifyme from './componets/Notifyme';\nimport Textbody from './componets/Textbody';\nimport Countdown from './componets/Countdown';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.reload = () => {\n      var Deadline = this.count - this.now;\n      var Days = Math.floor(Deadline / (1000 * 60 * 60 * 24));\n      var Hours = Math.floor(Deadline / (1000 * 60 * 60 * 24) / (1000 * 60 * 60));\n      var Minutes = Math.floor(Deadline % (1000 * 60 * 60) / (1000 * 60));\n      var seconds = Math.floor(Deadline(1000 * 60) / 1000);\n    };\n\n    this.state = {\n      count: new Date('jan 1, 2021,00:00:00').getTime,\n      now: new Date().getTime,\n      days: 0,\n      hours: 0,\n      minutes: 0,\n      seconds: 0\n    };\n  }\n\n  componentDidMount() {\n    this.timerID = setInterval(() => this.reload(), 1000);\n    console.log(this.days);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Textbody, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Notifyme, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Countdown, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 8\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["R:/Users/simba/Desktop/operations/Xsh/rollingThunder/closedError/src/App.js"],"names":["React","Component","Notifyme","Textbody","Countdown","App","constructor","props","reload","Deadline","count","now","Days","Math","floor","Hours","Minutes","seconds","state","Date","getTime","days","hours","minutes","componentDidMount","timerID","setInterval","console","log","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,WAAP;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,SAAP,MAAsB,uBAAtB;;AAEC,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AACjB,UAAMA,KAAN;;AADiB,SAuBnBC,MAvBmB,GAuBV,MAAI;AACX,UAAKC,QAAQ,GAAE,KAAKC,KAAL,GAAY,KAAKC,GAAhC;AACA,UAAKC,IAAI,GAAEC,IAAI,CAACC,KAAL,CAAWL,QAAQ,IAAE,OAAK,EAAL,GAAQ,EAAR,GAAW,EAAb,CAAnB,CAAX;AACA,UAAKM,KAAK,GAAEF,IAAI,CAACC,KAAL,CAAYL,QAAQ,IAAE,OAAK,EAAL,GAAQ,EAAR,GAAW,EAAb,CAAT,IAA4B,OAAK,EAAL,GAAQ,EAApC,CAAX,CAAZ;AACA,UAAIO,OAAO,GAAGH,IAAI,CAACC,KAAL,CAAYL,QAAQ,IAAE,OAAK,EAAL,GAAQ,EAAV,CAAR,IAAuB,OAAK,EAA5B,CAAZ,CAAd;AACA,UAAIQ,OAAO,GAAGJ,IAAI,CAACC,KAAL,CAAYL,QAAQ,CAAC,OAAK,EAAN,CAAT,GAAoB,IAA/B,CAAd;AAED,KA9BkB;;AAGjB,SAAKS,KAAL,GAAW;AACTR,MAAAA,KAAK,EAAG,IAAIS,IAAJ,CAAU,sBAAV,EAAkCC,OADjC;AAETT,MAAAA,GAAG,EAAC,IAAIQ,IAAJ,GAAWC,OAFN;AAGTC,MAAAA,IAAI,EAAE,CAHG;AAITC,MAAAA,KAAK,EAAC,CAJG;AAKTC,MAAAA,OAAO,EAAC,CALC;AAMTN,MAAAA,OAAO,EAAC;AANC,KAAX;AASD;;AAIDO,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL,GAAeC,WAAW,CACxB,MAAM,KAAKlB,MAAL,EADkB,EACH,IADG,CAA1B;AAGAmB,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,IAAjB;AACD;;AAWDQ,EAAAA,MAAM,GAAG;AAGP,wBAEG;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH;AAUD;;AA9C0B;;AAiD7B,eAAexB,GAAf","sourcesContent":["import React, { Component } from 'react'\n \nimport './App.css';\nimport Notifyme from './componets/Notifyme';\nimport Textbody from './componets/Textbody';\nimport Countdown from './componets/Countdown';\n\n class App extends Component {\n   constructor(props){\n    super(props);\n   \n    this.state={\n      count : new Date ('jan 1, 2021,00:00:00').getTime,\n      now:new Date().getTime,\n      days: 0,\n      hours:0,\n      minutes:0,\n      seconds:0\n    };\n    \n  }\n   \n\n\n  componentDidMount() {\n    this.timerID = setInterval(\n      () => this.reload(), 1000\n    );\n    console.log(this.days);\n  }\n\n  reload = ()=>{\n    var  Deadline= this.count- this.now;\n    var  Days= Math.floor(Deadline/(1000*60*60*24));\n    var  Hours =Math.floor((Deadline/(1000*60*60*24))/(1000*60*60));\n    var Minutes = Math.floor((Deadline%(1000*60*60)/(1000*60)));\n    var seconds = Math.floor((Deadline(1000*60))/1000);\n  \n  }\n  \n  render() {\n    \n   \n    return (\n       \n       <div className=\"container\">\n         <Textbody />\n         <Notifyme />\n         <Countdown />\n       </div>\n\n       \n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}